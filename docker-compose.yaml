version: '3.9'

services:
  postgres:
    image: postgres:16.2
    networks:
      - back
    environment:
      POSTGRES_DB: 'mydatabase'
      POSTGRES_USER: 'myuser'
      POSTGRES_PASSWORD: 'secret'

  backend:
    image: ghcr.io/vladdan16/spda-afisha-backend:latest
    ports:
      - "8080:8080"
    restart: unless-stopped
    networks:
      - back
      - metrics
    depends_on:
      - postgres
    environment:
      FIREBASE_SERVICE_ACCOUNT_KEY_PATH: "/var/spda-afisha-backend/serviceAccountKey.json"
    volumes:
      - ./serviceAccountKey.json:/var/spda-afisha-backend/serviceAccountKey.json
      - ./images:/backend/images

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - metrics

  loki:
    image: grafana/loki:latest
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - metrics

  grafana:
    image: grafana/grafana:latest
    volumes:
      - grafana:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
      - loki
    networks:
      - metrics

networks:
  back:
  metrics:

volumes:
   prometheus:
   grafana: